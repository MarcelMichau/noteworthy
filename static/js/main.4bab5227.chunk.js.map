{"version":3,"sources":["spotifyApi.js","MainMenuBar.js","Stage.js","App.js","serviceWorker.js","index.js"],"names":["login","redirectUri","window","location","hostname","protocol","host","getUserDetail","a","console","log","accessToken","localStorage","getItem","fetch","headers","Authorization","response","json","data","getUserTracks","url","next","tracks","items","concat","getCurrentlyPlaying","status","setPlayingTrack","track","method","body","JSON","stringify","uris","uri","text","MainMenuBar","isAuthorized","userData","currentlyPlaying","onLogin","onLogout","Menu","inverted","stackable","fixed","Item","header","active","style","backgroundColor","position","item","Icon","name","artists","id","Image","src","images","size","circular","display_name","Button","onClick","stageStyles","marginTop","Stage","children","Container","massageTracks","sortedTracks","sort","x","y","localeCompare","groupedByArtist","groupBy","value","Object","keys","forEach","artist","album","App","hasBeenAuthorized","useState","setIsAuthorized","setUserData","userTracks","setUserTracks","trackCount","setTrackCount","setCurrentlyPlaying","isLoading","setLoading","useEffect","hash","result","substr","split","reduce","parts","setItem","href","origin","authCallback","fetchCurrentlyPlaying","fetchUserDetail","localforage","length","localTracks","iterate","key","iterationNumber","map","fetchUserTracks","removeItem","logout","Dimmer","Loader","Segment","basic","Statistic","Group","widths","Value","Label","Divider","divided","className","loading","width","height","alt","Content","Header","as","Meta","release_date","Description","b","track_number","cursor","millis","minutes","Math","floor","seconds","toFixed","convertDuration","duration_ms","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bab5227.chunk.js","sourcesContent":["export const login = () => {\n\tconst url = 'https://accounts.spotify.com/authorize';\n\tconst clientId = '4b5e3eb3d3d643daa7f8bfd21f074eda';\n\n\tconst redirectUri =\n\t\twindow.location.hostname === 'marcelmichau.github.io'\n\t\t\t? 'https://marcelmichau.github.io/noteworthy'\n\t\t\t: `${window.location.protocol}//${window.location.host}`;\n\n\twindow.location = `${url}?client_id=${clientId}&response_type=token&redirect_uri=${redirectUri}&scope=user-library-read user-read-currently-playing user-modify-playback-state`;\n};\n\nexport const logout = setIsAuthorized => {\n\tlocalStorage.removeItem('access_token');\n\n\tsetIsAuthorized(false);\n};\n\nexport const getUserDetail = async () => {\n\tconsole.log('get user detail called');\n\n\tconst url = 'https://api.spotify.com/v1/me';\n\n\tconst accessToken = localStorage.getItem('access_token');\n\n\tconst response = await fetch(url, {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${accessToken}`\n\t\t}\n\t});\n\n\tconst data = await response.json();\n\n\tconsole.log(data);\n\n\treturn data;\n};\n\nexport const getUserTracks = async () => {\n\tconsole.log('get user artists called');\n\n\tlet url = 'https://api.spotify.com/v1/me/tracks?limit=50';\n\n\tconst accessToken = localStorage.getItem('access_token');\n\n\tconst response = await fetch(url, {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${accessToken}`\n\t\t}\n\t});\n\n\tlet data = await response.json();\n\n\turl = data.next;\n\n\tconsole.log('next url', url);\n\n\tlet tracks = data.items;\n\n\twhile (url !== null) {\n\t\tconst response = await fetch(url, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${accessToken}`\n\t\t\t}\n\t\t});\n\n\t\tconst data = await response.json();\n\n\t\ttracks = tracks.concat(data.items);\n\n\t\turl = data.next;\n\n\t\tconsole.log('next url', url);\n\t}\n\n\treturn tracks;\n};\n\nexport const getCurrentlyPlaying = async () => {\n\tconsole.log('get currently playing called');\n\n\tconst url = 'https://api.spotify.com/v1/me/player/currently-playing';\n\n\tconst accessToken = localStorage.getItem('access_token');\n\n\tconst response = await fetch(url, {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${accessToken}`\n\t\t}\n\t});\n\n\tif (response.status !== 200) return;\n\n\tconst data = await response.json();\n\n\tconsole.log(data);\n\n\treturn data;\n};\n\nexport const setPlayingTrack = async track => {\n\tconsole.log('set playing track called');\n\n\tconst url = 'https://api.spotify.com/v1/me/player/play';\n\n\tconst accessToken = localStorage.getItem('access_token');\n\n\tconst response = await fetch(url, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${accessToken}`\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\turis: [track.uri]\n\t\t})\n\t});\n\n\tconst data = await response.text();\n\n\treturn data;\n};\n","import React from 'react';\nimport { Icon, Menu, Image, Button } from 'semantic-ui-react';\n\nconst MainMenuBar = ({\n\tisAuthorized,\n\tuserData,\n\tcurrentlyPlaying,\n\tonLogin,\n\tonLogout\n}) => (\n\t<Menu inverted stackable fixed=\"top\">\n\t\t<Menu.Item\n\t\t\theader\n\t\t\tactive\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: '#1DB954'\n\t\t\t}}\n\t\t>\n\t\t\tnoteworthy for Spotify\n\t\t</Menu.Item>\n\n\t\t<Menu.Menu position=\"right\">\n\t\t\t{isAuthorized && (\n\t\t\t\t<>\n\t\t\t\t\t{currentlyPlaying && currentlyPlaying.item && (\n\t\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t\t<Icon name=\"play\" /> {currentlyPlaying.item.artists[0].name} -{' '}\n\t\t\t\t\t\t\t{currentlyPlaying.item.name}\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t)}\n\t\t\t\t\t{userData.id && (\n\t\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t\t<Image src={userData.images[0].url} size=\"mini\" circular />\n\t\t\t\t\t\t\t{userData.display_name}\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t)}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{isAuthorized && (\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<Button onClick={onLogout}>Logout</Button>\n\t\t\t\t</Menu.Item>\n\t\t\t)}\n\t\t\t{!isAuthorized && (\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<Button onClick={onLogin}>Login</Button>\n\t\t\t\t</Menu.Item>\n\t\t\t)}\n\t\t</Menu.Menu>\n\t</Menu>\n);\n\nexport default MainMenuBar;\n","import React from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nconst stageStyles = {\r\n\tmarginTop: '4em'\r\n};\r\n\r\nconst Stage = ({ children }) => {\r\n\treturn <Container style={stageStyles}>{children}</Container>;\r\n};\r\n\r\nexport default Stage;\r\n","import React, { useState, useEffect } from 'react';\nimport {\n\tlogin,\n\tlogout,\n\tgetUserDetail,\n\tgetUserTracks,\n\tgetCurrentlyPlaying,\n\tsetPlayingTrack\n} from './spotifyApi';\nimport MainMenuBar from './MainMenuBar';\nimport Stage from './Stage';\nimport {\n\tSegment,\n\tIcon,\n\tDimmer,\n\tLoader,\n\tItem,\n\tDivider,\n\tStatistic\n} from 'semantic-ui-react';\nimport localforage from 'localforage';\nimport { groupBy } from 'lodash';\n\nconst authCallback = () => {\n\tlet hash = window.location.hash.substr(1);\n\n\tlet result = hash.split('&').reduce(function(result, item) {\n\t\tlet parts = item.split('=');\n\t\tresult[parts[0]] = parts[1];\n\t\treturn result;\n\t}, {});\n\n\tconsole.log(result);\n\n\tlocalStorage.setItem('access_token', result['access_token']);\n\n\tif (window.location.hostname === 'marcelmichau.github.io') {\n\t\twindow.location.href = `${window.location.origin}/noteworthy`;\n\t} else {\n\t\twindow.location.href = window.location.origin;\n\t}\n\n\treturn result;\n};\n\nconst massageTracks = tracks => {\n\tconst sortedTracks = tracks.sort((x, y) =>\n\t\tx.artists[0].name.localeCompare(y.artists[0].name)\n\t);\n\n\tconst groupedByArtist = groupBy(sortedTracks, value => value.artists[0].name);\n\n\tObject.keys(groupedByArtist).forEach(artist => {\n\t\tgroupedByArtist[artist] = groupBy(\n\t\t\tgroupedByArtist[artist].sort((x, y) =>\n\t\t\t\tx.album.name.localeCompare(y.album.name)\n\t\t\t),\n\t\t\tvalue => value.album.name\n\t\t);\n\t});\n\n\treturn groupedByArtist;\n};\n\nfunction convertDuration(millis) {\n\tvar minutes = Math.floor(millis / 60000);\n\tvar seconds = ((millis % 60000) / 1000).toFixed(0);\n\treturn seconds === 60\n\t\t? minutes + 1 + ':00'\n\t\t: minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\n}\n\nfunction App() {\n\tconst hasBeenAuthorized = localStorage.getItem('access_token') !== null;\n\n\tconst [isAuthorized, setIsAuthorized] = useState(hasBeenAuthorized);\n\n\tconst [userData, setUserData] = useState({});\n\n\tconst [userTracks, setUserTracks] = useState({});\n\n\tconst [trackCount, setTrackCount] = useState(0);\n\n\tconst [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (window.location.hash) {\n\t\t\tsetIsAuthorized(authCallback());\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tasync function fetchCurrentlyPlaying() {\n\t\t\tconst result = await getCurrentlyPlaying();\n\t\t\tsetCurrentlyPlaying(result);\n\t\t}\n\n\t\tif (isAuthorized) fetchCurrentlyPlaying();\n\t}, [isAuthorized]);\n\n\tuseEffect(() => {\n\t\tasync function fetchUserDetail() {\n\t\t\tconst result = await getUserDetail();\n\t\t\tsetUserData(result);\n\t\t}\n\n\t\tif (isAuthorized) fetchUserDetail();\n\t}, [isAuthorized]);\n\n\tuseEffect(() => {\n\t\tasync function fetchUserTracks() {\n\t\t\tsetLoading(true);\n\n\t\t\tconst numberOfKeys = await localforage.length();\n\n\t\t\tif (numberOfKeys > 0) {\n\t\t\t\tlet localTracks = [];\n\n\t\t\t\tawait localforage.iterate((value, key, iterationNumber) => {\n\t\t\t\t\tlocalTracks = localTracks.concat(value);\n\t\t\t\t});\n\n\t\t\t\tsetTrackCount(localTracks.length);\n\t\t\t\tsetUserTracks(massageTracks(localTracks));\n\t\t\t} else {\n\t\t\t\tconst tracks = await getUserTracks();\n\n\t\t\t\ttracks.forEach(async track => {\n\t\t\t\t\tawait localforage.setItem(track.track.id, track.track);\n\t\t\t\t});\n\n\t\t\t\tsetTrackCount(tracks.length);\n\t\t\t\tsetUserTracks(massageTracks(tracks.map(track => track.track)));\n\t\t\t}\n\t\t\tsetLoading(false);\n\t\t}\n\n\t\tif (isAuthorized) fetchUserTracks();\n\t}, [isAuthorized]);\n\n\treturn (\n\t\t<>\n\t\t\t<MainMenuBar\n\t\t\t\tisAuthorized={isAuthorized}\n\t\t\t\tuserData={userData}\n\t\t\t\tcurrentlyPlaying={currentlyPlaying}\n\t\t\t\tonLogin={login}\n\t\t\t\tonLogout={() => logout(setIsAuthorized)}\n\t\t\t></MainMenuBar>\n\t\t\t{isLoading && (\n\t\t\t\t<Dimmer active>\n\t\t\t\t\t<Loader>Loading Tracks...</Loader>\n\t\t\t\t</Dimmer>\n\t\t\t)}\n\t\t\t<Segment basic>\n\t\t\t\t{isAuthorized && (\n\t\t\t\t\t<Stage>\n\t\t\t\t\t\t{Object.keys(userTracks).length > 0 && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Statistic.Group widths=\"two\">\n\t\t\t\t\t\t\t\t\t<Statistic>\n\t\t\t\t\t\t\t\t\t\t<Statistic.Value>\n\t\t\t\t\t\t\t\t\t\t\t{Object.keys(userTracks).length}\n\t\t\t\t\t\t\t\t\t\t</Statistic.Value>\n\t\t\t\t\t\t\t\t\t\t<Statistic.Label>Artists</Statistic.Label>\n\t\t\t\t\t\t\t\t\t</Statistic>\n\t\t\t\t\t\t\t\t\t<Statistic>\n\t\t\t\t\t\t\t\t\t\t<Statistic.Value>{trackCount}</Statistic.Value>\n\t\t\t\t\t\t\t\t\t\t<Statistic.Label>Tracks</Statistic.Label>\n\t\t\t\t\t\t\t\t\t</Statistic>\n\t\t\t\t\t\t\t\t</Statistic.Group>\n\n\t\t\t\t\t\t\t\t<Divider></Divider>\n\n\t\t\t\t\t\t\t\t{Object.keys(userTracks).map(artist => (\n\t\t\t\t\t\t\t\t\t<div key={artist}>\n\t\t\t\t\t\t\t\t\t\t<h3>{artist}</h3>\n\t\t\t\t\t\t\t\t\t\t<Item.Group divided>\n\t\t\t\t\t\t\t\t\t\t\t{Object.keys(userTracks[artist]).map(album => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Item key={album}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"image\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth=\"300\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\theight=\"300\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserTracks[artist][album][0].album.images[1].url\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={album}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Item.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Item.Header as=\"a\">{album}</Item.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Item.Meta>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{userTracks[artist][album][0].album.release_date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Item.Meta>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Item.Description>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{userTracks[artist][album]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.sort((a, b) => a.track_number - b.track_number)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(track => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p key={track.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"play\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tawait setPlayingTrack(track);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst result = await getCurrentlyPlaying();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentlyPlaying(result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{track.track_number}) {track.name} -{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{convertDuration(track.duration_ms)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Item.Description>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Item.Content>\n\t\t\t\t\t\t\t\t\t\t\t\t</Item>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</Item.Group>\n\t\t\t\t\t\t\t\t\t\t<Divider></Divider>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Stage>\n\t\t\t\t)}\n\t\t\t</Segment>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-less/semantic.less';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}